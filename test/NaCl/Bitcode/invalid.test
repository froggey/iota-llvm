; Check when separator(,) not followed by a value.

RUN: not pnacl-bcfuzz -bitcode-as-text %p/Inputs/bad-separator.tbc \
RUN:    -output - 2>&1 | FileCheck --check-prefix=BAD-SEP %s

BAD-SEP: Value expected after separator, but not found

; Check that comparison operator of branch is i1.

RUN: pnacl-bcfuzz -bitcode-as-text %p/Inputs/bad-branch-compare.tbc \
RUN:    -output - | not pnacl-bcdis | FileCheck --check-prefix=BAD-BC-BR-CMP %s

BAD-BC-BR-CMP:      br i32 %p0, label %b1, label %b2;
BAD-BC-BR-CMP-NEXT: Branch condition not i1

RUN: pnacl-bcfuzz -bitcode-as-text %p/Inputs/bad-branch-compare.tbc \
RUN:     -output - | not pnacl-thaw -o /dev/null 2>&1 \
RUN:               | FileCheck --check-prefix=BAD-BR-CMP %s

BAD-BR-CMP: Type of branch condition not i1. Found: i32

; Tests that we recognize wrong abbreviation index bitsize in a blockinfo block,
; and properly exit with an appropriate error message.
; Tests issue: https://code.google.com/p/nativeclient/issues/detail?id=4215
RUN: not pnacl-bcfuzz -bitcode-as-text %p/Inputs/bad-blockinfo-numbits.tbc \
RUN:     -output - 2>&1 | FileCheck --check-prefix=BAD-BLKINFO_BITS %s

BAD-BLKINFO_BITS: Numbits entry for abbreviations in blockinfo block not 2.
BAD-BLKINFO_BITS: Failed to write bitcode

; Check that we catch error where line doesn't begin with a record code.

RUN: not pnacl-bcfuzz -bitcode-as-text %p/Inputs/bad-code.tbc \
RUN:    -output - 2>&1 | FileCheck --check-prefix=BAD-CODE %s

BAD-CODE: Bitcode record doesn't begin with a record code
